<?xml version="1.0" encoding="utf-8"?>
<!-- A DrawerLayout is intended to be used as the top-level content view using match_parent for both width and height to consume the full space available. -->
<android.support.v4.widget.DrawerLayout
        xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:app="http://schemas.android.com/apk/res-auto"
        xmlns:tools="http://schemas.android.com/tools"
        android:id="@+id/drawer_layout"
        android:layout_width="match_parent"
        android:layout_height="match_parent">
        <!-- As the main content view, the view below consumes the entire
             space available using match_parent in both dimensions. -->
        <LinearLayout
            android:layout_width="match_parent"
            android:orientation="vertical"
            android:layout_height="match_parent">
            <include layout="@layout/toolbar_old"/>
            <FrameLayout
                    android:layout_width="match_parent"
                    android:id="@+id/content_frame"
                    android:layout_height="fill_parent"/>
        </LinearLayout>

    <!-- android:layout_gravity="start" tells DrawerLayout to treat
         this as a sliding drawer on the left side for left-to-right
         languages and on the right side for right-to-left languages.
         The drawer is given a fixed width in dp and extends the full height of
         the container. A solid background is used for contrast
         with the content view. -->
        <fragment
                android:layout_width="280dp"
                android:layout_height="match_parent"
                android:layout_gravity="start"
                app:layout="@layout/fragmnet_navigation_drawer_old"
                android:name="com.vpineda.duinocontrol.app.fragments.NavigationalDrawerFragment"
                tools:layout="@layout/fragmnet_navigation_drawer_old"
                android:id="@+id/left_drawer"/>
</android.support.v4.widget.DrawerLayout>